---
- name: GCloud Config
  connection: local
  gather_facts: true
  hosts: all
  vars:
    ansible_python_interpreter: /usr/bin/python3
  become: true
  tasks:

   - name: Authenticate GCloud
     shell: |
       gcloud auth activate-service-account \
        ${GCP_SERVICE_ACCOUNT} \
        --key-file=${GOOGLE_APPLICATION_CREDENTIALS}
        gcloud config set account ${GCP_SERVICE_ACCOUNT}
     become_user: vagrant

   - name: Configure GCloud
     shell: |
       gcloud config set project ${GCP_PROJECT}
       gcloud config set compute/region ${GCP_REGION}
       gcloud config set compute/zone ${GCP_ZONE}
     become_user: vagrant

   - name: Create .kube Directory
     file:
       path: ~/.kube
       state: directory
       owner: vagrant
       mode: '0755'
     become_user: vagrant

   - name: Create Microk8s Directory
     file:
       path: /etc/microk8s
       state: directory
       owner: root
       mode: '0755'

   # NOTE: Extract first, then copied to vagrant users HOME
   - name: Extract Microk8s Config
     shell: |
      microk8s kubectl config view --raw > /etc/microk8s/config

   - name: Add Local Cluster
     shell: |
      cat /etc/microk8s/config > ~/.kube/config
     become_user: vagrant

   - name: Rename Local Cluster
     command: kubectl config rename-context microk8s local
     become_user: vagrant

   - name: Add Dev Cluster
     command: gcloud container clusters get-credentials ${GCP_CLUSTER_NAME}
     become_user: vagrant

   - name: Rename Dev Cluster
     shell: kubectl config rename-context $(kubectl config current-context) dev
     become_user: vagrant

   - name: Configure Docker
     shell: |
       kubectl config use-context dev
       gcloud components install docker-credential-gcr -q
       gcloud auth configure-docker -q
       docker-credential-gcr configure-docker
     become_user: vagrant

   - name: Add Octant Service
     copy:
      remote_src: yes
      src: /home/vagrant/project/vm/config/octant/octant.service
      dest: /etc/systemd/system/octant.service
      owner: root

   - name: Start Octant Service
     systemd:
      name: octant.service
      daemon_reload: yes
      enabled: yes
      state: started
